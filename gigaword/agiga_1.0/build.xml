<?xml version="1.0"?>
<project name="agiga" default="compile" basedir=".">

  <property name="classes.path"        value="${basedir}/classes" />
  <property name="source.path"         value="${basedir}/src" />
  <property name="build.path"          value="${basedir}/build" />
  <property name="build.path"          value="${basedir}/build" />
  <property name="version"             value="1.0" />
  <property name="app.jar.path"        value="${build.path}/agiga-${version}.jar" />
  <property name="source.jar.path"     value="${build.path}/agiga-sources-${version}.jar" />

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
  <property name="compile.source"      value="1.6" />
  <property name="compile.target"      value="1.6" />
  <property name="compile.encoding"    value="utf-8" />

  <target name="classpath" description="Sets the classpath">
    <echo message="${ant.project.name}" />
    <path id="classpath">
      <fileset dir="${basedir}/lib">
        <include name="*.jar"/>
      </fileset>
    </path>
    <path id="classes">
      <pathelement location="${classes.path}" />
    </path>
  </target>

  <target name="clean" description="Delete built files">
    <echo message="${ant.project.name}" />
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${classes.path}/" includes="**/*"/>
      <fileset dir="${build.path}/" includes="**/*"/>
    </delete>
  </target>

  <target name="build-dir" description="Create build output directories">
    <echo message="${ant.project.name}" />
    <mkdir dir="${classes.path}" />
    <mkdir dir="${build.path}" />
  </target>
  
  <target name="compile" depends="classpath,build-dir"
          description="Compile source files">
    <echo message="${ant.project.name}" />
    <javac srcdir="${source.path}"
           destdir="${classes.path}"
           debug="${compile.debug}"
           encoding="utf-8" 
         deprecation="${compile.deprecation}"
           optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}"
         includeantruntime="false">
      <classpath refid="classpath" />
      <compilerarg value="-Xlint"/>
    </javac>
  </target>

  <target name="jar" depends="compile"
        description="Creates jar files of the classes and sources">
    <echo message="${ant.project.name}" />
    <jar destfile="${app.jar.path}">
      <fileset dir="${classes.path}" 
        excludes="**/*Test.class"/> 
    </jar>
    <jar destfile="${source.jar.path}">
      <fileset dir="${source.path}" 
        includes="**/*.java" 
        excludes="**/*Test.java"/> 
    </jar>
  </target>

  <target name="all" depends="clean,compile"
          description="Clean and re-compile." />

</project>
